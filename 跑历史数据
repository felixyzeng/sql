# -*- coding: utf-8 -*-
import pandas as pd
from pyhive import hive
import os
import time
import subprocess
import redis
import sys

active_file_name = sys.argv[0]
server = sys.argv[1]
direct = sys.argv[2]

if not direct:
    direct = 'right'

print("任务开始！")

sql_list = [

    # r'/data/jobs/data-warehouse/dwa/g7s/dwa_g7s_security_dev_label.sql'
    #r'/data/jobs/data-warehouse/tmp/20241015.sql'
    #r'/data/jobs/data-warehouse/tmp/tmp_20220808_zengyu_amap_navigate_match_network_5.sql'
    #r'/data/jobs/dc-dw/dwm/dwm_e6_mileage_detail_road_adsorb_fpd.sql'
    # r'/data/jobs/data-warehouse/tmp/zengyu/dwm_mileage_detail_road_adsorb_fpd.sql'
    #,r'/data/jobs/dc-dw/dwm/dwm_iot_event_road_adsorb_fpd.sql'
    #,r'/data/jobs/dc-dw/dwa/dwa_road_network_risk_ipd.sql'
    r'/data/jobs/dc-dw/dwm/dwm_bigdata_event_overspeed_fpd.sql'
    #r'/data/jobs/dc-dw/dwa/dwa_road_accident_info_pass_detail_week_ipd.sql'
    #r'/data/jobs/dc-dw/dwa/dwa_road_accident_info_pass_detail_month_ipd.sql'
    #r'/data/jobs/data-warehouse/dwa/task/dwa_task_task_job_details_v2_day_p_daily.sql'
]

sh_list = [
#       r'/data/jobs/data-warehouse/tmp/zengyu/liguo.sh'

]
#
# for index, row in result.iterrows():
#     print('处理日期：' + str(row[0]))
#     if str(row[0]) not in exists_partitions_list:
#         time.sleep(10)
#         for sql_file in sql_list:
#             sh_cmd = '/data/jobs/data-warehouse/tmp/daily_' + g_host + '.sh ' + str(row[0]) + ' ' + sql_file
#             print('sh命令:' + sh_cmd)
#             ret = os.system(sh_cmd)
#             print('sh结果:' + str(ret))
#
#         for sh_file in sh_list:
#             p = subprocess.Popen('sh ' + sh_file + ' ' + str(row[0]),stdout=subprocess.PIPE, shell=True)

redis_prod = 1

if redis_prod:
    # 生产redis
    rds = redis.Redis(host='r-bp14304f3d58c9e4.redis.rds.aliyuncs.com', port='6379', password='DSPlg1219', decode_responses=True)

else:
    # 测试redis
    rds = redis.Redis(host='172.22.35.241', port='6379', password='dsptest-redis', decode_responses=True)

rds_list_name = 'tmp_zengyu'

log_name = active_file_name + str(server) + '.out'

while 1:

    if direct == 'right':
        data_date = rds.rpop(rds_list_name)
    else:
        data_date = rds.lpop(rds_list_name)

    if data_date:

        while 1:

            if server == '33' and time.strftime('%H',time.localtime(time.time())) not in ('09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23'):
                os.popen("echo '\n" + str(data_date) + " " + time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time())) +  " 33不在指定小时，休眠10分钟 " + "' >> " + log_name)
                time.sleep(600)
                continue

            error_cnt_before = os.popen('cat ' + log_name + ' | grep Error |wc -l').read()

            for sql_file in sql_list:
                sh_cmd = '/data/jobs/data-warehouse/tmp/daily_' + server + '.sh ' + str(data_date) + ' ' + sql_file
                print('sh命令:' + sh_cmd)
                ret = os.system(sh_cmd)
                print('sh结果:' + str(ret))

            error_cnt_now = os.popen('cat ' + log_name + ' | grep Error |wc -l').read()

            os.popen("echo '\n" + str(data_date) + ' error_cnt_before:' + str(error_cnt_before) + ',' + 'error_cnt_now:' + str(
                error_cnt_now) + "' >> " + log_name)
            if error_cnt_before != error_cnt_now:
                time.sleep(60)
                continue
            else:
                for sh_file in sh_list:
                    p = subprocess.Popen(sh_file + ' ' + data_date, stdout=subprocess.PIPE, shell=True)
                    os.popen("echo '\n" + '后置sh结果:' + str(p.stdout.readlines()) + "' >> " + log_name)

                break
    else:
        break

print("完成！")

